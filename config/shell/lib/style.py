import subprocess
import json
import sys
import os

from lib.constants import CONFIG_DIR


STYLES_DIR = CONFIG_DIR / "style"
# Now using matugen templates. DO NOT USE    
def __generate_colors():
    scss_content = ["// Generated by mutagen and transleted to scss by materialU-toScss.py"]

    with subprocess.Popen(args=["matugen", "image", sys.argv[1], "--json", "hex"], stdout=subprocess.PIPE) as proc:
        out: dict[str, dict[str,dict[str,str]]] = json.loads(proc.stdout.read())
        for key,value in out["colors"]["dark"].items():
            scss_content.append(f"${key}: {value};")

        return scss_content

def compile_scss():
    try:
        subprocess.check_call(["sass", str(STYLES_DIR / "main.scss"), str(STYLES_DIR / "style.css")], stdout=subprocess.DEVNULL, stderr=subprocess.DEVNULL)
    except Exception as e:
        print(e)
        return

# Now using matugen templates. DO NOT USE
def __update_colors_scss():
    color_scss = STYLES_DIR / "colors.scss"

    if color_scss.is_file():
        os.rename(str(color_scss), str(color_scss.with_suffix(".old")))
    try:
        f = open(color_scss, "w")
        f.write("\n".join(__generate_colors()))
    except Exception as e:
        print(e)
        os.rename(str(color_scss.with_suffix(".old")), str(color_scss))
    
    compile_scss()
